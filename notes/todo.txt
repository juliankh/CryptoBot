TODO:

-misc
    -check
        -direct orderbook bridge
            -ever get snapshots after the initial one
            -any req_id that doesn't match
    -compare xchage vs direct orderbook bridges
        -latest snapshot age time lag
        -how often xchange orderbook bridges have checksum mismatches
            -check how many checksum errors within 1 hour in xchange bridge, and compare that to how long it takes for checksum error to happen in direct bridge
        -num of snapshots received (ie: num of orderbooks in redis from each source within an hour)
        -frequency of socket drops

    -if the snapshot age log msgs show that a time delay develops (presumably because consumption of orderbook data is slower then the rate at which data is sent by the exchange), then look into optimizing the checksum algorithm
    -make log4j logs rollover to new log files every 24 hours and keep the past 10 log versions
    -auto-restart processes after restarting computer
    -see how to make the assembled jar smaller (without unnecessary libs) so that the build runs faster
    -if there is no use case to use jms, then remove jms-related code
-ML
    -admin
        -ensure ML uses gpu processors
    -model variations
        -no derived features vs derived features
        -training data range: 10 min, 30 min, 60 min, 120 min
        -prediction scope: 5 min, 10 min, 15 min, 30 min
        -orderbook depth: 500, 200, 100, 50, 20, 10
    -derived features
        -1st order derived
            -area under curve
                -absolute area under curve
                -% diff in area under curve between bids and asks
                -for different depths (500, 200, 100, 50, 20, 10)
            -time
                -minute of hour
                -hour of day
                -hour and minute of day
            -spread size (absolute or relative to midprice)
        -2nd order derived
            -% change for some feature vs some previous time (1 min ago, 2 min ago, 5 min ago, 10 min ago, 30 min ago, 60 min ago)
    -questions
        -if a feature has no bearing on prediction accuracy, will NN learn to ignore it?  How important is it to omit that feature?